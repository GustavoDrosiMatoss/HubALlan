if not game or not game.GetService then
    warn("Ambiente do jogo não está disponível.")
    return
end

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local enemiesFolder = Workspace:WaitForChild("__Main"):WaitForChild("__Enemies"):WaitForChild("Client")
local remote = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

local teleportEnabled = false
local killedNPCs = {}
local dungeonkill = {}
local selectedMobName = ""
local movementMethod = "Tween"
local farmingStyle = "Default"
local dungeonActive = false
local tempFile = "HTHub/AriseCrossover/DungeonTemp.txt"
local function isInDungeon()
    local dungeonFolder = Workspace:WaitForChild("__Main"):FindFirstChild("__Dungeon")
    return dungeonFolder and dungeonFolder:FindFirstChild("Dungeon") ~= nil
end

local function safeDelete(filePath)
    if isfile and isfile(filePath) then
        delfile(filePath)
    end
end

local ConfigSystem = {}
ConfigSystem.Folder = "HTHub"
ConfigSystem.SubFolder = "AriseCrossover"
ConfigSystem.FileName = player.Name .. "_Config.json"
ConfigSystem.FilePath = ConfigSystem.Folder .. "/" .. ConfigSystem.SubFolder .. "/" .. ConfigSystem.FileName
ConfigSystem.DefaultConfig = {
    SelectedMobName = "",
    FarmSelectedMob = false,
    AutoFarmNearestNPCs = false,
    MainAutoDestroy = false,
    MainAutoArise = false,
    FarmingMethod = "Tween",
    DamageMobs = false,
    SelectedShop = "",
    SelectedWeapon = "",
    AutoBuyEnabled = false,
    AutoScanEnabled = false,
    ScanDelay = 1,
    SelectedRanks = {},
    AutoSellEnabled = false
}
ConfigSystem.CurrentConfig = {}

ConfigSystem.CreateFolders = function()
    local success = pcall(function()
        if makefolder then
            if not isfolder(ConfigSystem.Folder) then
                makefolder(ConfigSystem.Folder)
            end
            if not isfolder(ConfigSystem.Folder .. "/" .. ConfigSystem.SubFolder) then
                makefolder(ConfigSystem.Folder .. "/" .. ConfigSystem.SubFolder)
            end
        end
    end)
    return success
end

ConfigSystem.SaveConfig = function()
    local encoded = HttpService:JSONEncode(ConfigSystem.CurrentConfig)
    writefile(ConfigSystem.FilePath, encoded)
end
local function iniciarDungeon()
    print("▶️ Iniciando dungeon...")
    local args = {
        [1] = {
            [1] = { Event = "DungeonAction", Action = "Start" },
            [2] = "\12"
        }
    }
    remote:FireServer(unpack(args))
end

local function createDungeon()
    if dungeonActive then
        print("⚠️ Dungeon já está ativa, pulando criação")
        return
    end

    if isInDungeon() then
        print("⚠️ Já está em uma dungeon")
        dungeonActive = true
        ConfigSystem.SaveConfig()
        return
    end

    print("🆕 Criando nova dungeon...")
    local args = {
        [1] = {
            [1] = { Event = "DungeonAction", Action = "Create" },
            [2] = "\12"
        }
    }
    remote:FireServer(unpack(args))

    dungeonActive = true
    ConfigSystem.SaveConfig()
    writefile(tempFile, "1")

    task.wait(5)
    iniciarDungeon()
end

local function resetDungeon()
    print("💎 Resetando dungeon com gems...")
    local args = {
        [1] = {
            [1] = { Type = "Gems", Event = "DungeonAction", Action = "BuyTicket" },
            [2] = "\12"
        }
    }
    remote:FireServer(unpack(args))
    dungeonActive = false
    ConfigSystem.SaveConfig()
    safeDelete(tempFile)
end
Tabs.dungeon:AddButton({
    Title = "Criar Dungeon",
    Description = "Cria e inicia uma nova dungeon",
    Callback = function()
        createDungeon()
    end
})

Tabs.dungeon:AddButton({
    Title = "Resetar Dungeon",
    Description = "Usa gems para resetar a dungeon",
    Callback = function()
        resetDungeon()
    end
})
local function teleportToTarget(target)
    if movementMethod == "Tween" then
        local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear)
        local goal = {CFrame = target.CFrame + Vector3.new(0, 5, 0)}
        local tween = TweenService:Create(hrp, tweenInfo, goal)
        tween:Play()
    elseif movementMethod == "Instant" then
        hrp.CFrame = target.CFrame + Vector3.new(0, 5, 0)
    end
end

local function attackMob(mob)
    if mob and mob:FindFirstChild("Humanoid") then
        mob.Humanoid.Health = 0
        table.insert(killedNPCs, mob.Name)
    end
end

local function farmSelectedMob()
    for _, mob in pairs(enemiesFolder:GetChildren()) do
        if mob.Name == selectedMobName then
            teleportToTarget(mob.PrimaryPart)
            attackMob(mob)
        end
    end
end

local function farmNearestMob()
    local closestMob, shortestDistance = nil, math.huge
    for _, mob in pairs(enemiesFolder:GetChildren()) do
        local distance = (mob.PrimaryPart.Position - hrp.Position).Magnitude
        if distance < shortestDistance then
            closestMob = mob
            shortestDistance = distance
        end
    end
    if closestMob then
        teleportToTarget(closestMob.PrimaryPart)
        attackMob(closestMob)
    end
end
local function autoBuyItem(itemName)
    local args = {
        [1] = {
            [1] = { Event = "ShopAction", Action = "Buy", Item = itemName },
            [2] = "\12"
        }
    }
    remote:FireServer(unpack(args))
end

local function autoScan()
    while ConfigSystem.CurrentConfig.AutoScanEnabled do
        print("🔍 Escaneando...")
        task.wait(ConfigSystem.CurrentConfig.ScanDelay or 1)
        ConfigSystem.CreateFolders()
ConfigSystem.CurrentConfig = ConfigSystem.DefaultConfig
ConfigSystem.SaveConfig()

-- Loop de farm
spawn(function()
    while true do
        if ConfigSystem.CurrentConfig.FarmSelectedMob then
            farmSelectedMob()
        elseif ConfigSystem.CurrentConfig.AutoFarmNearestNPCs then
            farmNearestMob()
        end
        task.wait(0.5)
    end
end)

-- Loop de scan
spawn(autoScan)-- lógica de escaneamento aqui
    end
end
local function autoSellPets()
    if not ConfigSystem.CurrentConfig.AutoSellEnabled then return end
    print("🐾 Vendendo pets automaticamente...")
    -- lógica de venda de pets aqui
end
