-- Allan Hub Arise - Auto Dungeon + Auto Castelo + Agendamento
-- Configuração persistente em allan_hub_config.json

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local remote = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- 📁 Configuração persistente
local configFile = "allan_hub_config.json"
local config = {}
if isfile(configFile) then
    config = HttpService:JSONDecode(readfile(configFile))
else
    config = {
        AutoDungeon = false,
        AutoCastelo = false,
        AutoLeave = false,
        AndarEntrada = 10,
        AndarSaida = 1
    }
end
local function salvarConfig() writefile(configFile,HttpService:JSONEncode(config)) end

-- 🔹 Auto Dungeon
local ativarDungeon = config.AutoDungeon
local tabDungeon = Window:AddTab({
    Title = "Auto Dungeon",
    Icon = "swords"
})
local function sairDungeon()
    local args = { [1] = { [1] = { ["Check"]=true,["Event"]="DungeonAction",["Action"]="LeaveDungeon"},[2]="\\12"}}
    remote:FireServer(unpack(args))
    print("❌ Saindo da Dungeon...")
end
local function atacarMobsDungeon()
    while ativarDungeon do
        print("⚔️ Farmando mobs da dungeon...")
        task.wait(1)
    end
end
tabDungeon:AddToggle("ToggleAutoDungeon", {
    Title = "Auto Dungeon",
    Default = config.AutoDungeon,
    Callback = function(state)
        config.AutoDungeon = state
        salvarConfig()
        ativarDungeon = state
        if state then
            print("⚔️ Auto Dungeon ativado!")
            task.spawn(atacarMobsDungeon)
        else
            print("❌ Auto Dungeon desativado!")
        end
    end
})
if config.AutoDungeon then task.spawn(atacarMobsDungeon) end

-- 🔥 Auto Castelo (aba separada)
local ativarCastelo = config.AutoCastelo
local ativarAutoLeave = config.AutoLeave
local andarEntrada = config.AndarEntrada
local andarSaida = config.AndarSaida
local currentFloor = 0
local tabCastelo = Window:AddTab({
    Title = "Auto Castelo",
    Icon = "home"
})
-- Dropdowns
local valsEntrada,valsSaida={},{} for i=10,110,10 do table.insert(valsEntrada,tostring(i)) end for i=1,117 do table.insert(valsSaida,tostring(i)) end
tabCastelo:AddDropdown("AndarEntrada",{Title="Andar Entrada",Values=valsEntrada,Default=tostring(andarEntrada),Callback=function(v)andarEntrada=tonumber(v)config.AndarEntrada=andarEntrada salvarConfig()end})
tabCastelo:AddDropdown("AndarSaida",{Title="Andar Saída",Values=valsSaida,Default=tostring(andarSaida),Callback=function(v)andarSaida=tonumber(v)config.AndarSaida=andarSaida salvarConfig()end})
tabCastelo:AddToggle("ToggleAutoLeave",{Title="Auto Leave",Default=ativarAutoLeave,Callback=function(state)ativarAutoLeave=state config.AutoLeave=state salvarConfig()end})
-- Funções Castelo
local function entrarCastelo()
    local args = { [1] = { [1] = { ["Check"]=true,["Floor"]=tostring(andarEntrada),["Event"]="CastleAction",["Action"]="Join"},[2]="\\12"}}
    remote:FireServer(unpack(args))
    print("✅ Entrando no andar",andarEntrada)
end
local function sairCastelo()
    local args = { [1] = { [1] = { ["Check"]=true,["Floor"]=tostring(andarSaida),["Event"]="CastleAction",["Action"]="LeaveDungeon"},[2]="\\12"}}
    remote:FireServer(unpack(args))
    print("❌ Saindo no andar",andarSaida)
end
local function atacarMobsCastelo()
    while ativarCastelo do
        print("⚔️ Farmando mobs do castelo...")
        task.wait(1)
    end
end
-- Monitorar andar e auto leave
remote.OnClientEvent:Connect(function(data)
    if typeof(data)=="table" and data[1] and data[1]["Event"]=="PortalAction" then
        local andar=tonumber(data[1]["Floor"])
        if andar then currentFloor=andar if ativarCastelo and ativarAutoLeave and andar==andarSaida then sairCastelo() end end
    end
end)
-- Toggle Auto Castelo
tabCastelo:AddToggle("ToggleAutoCastelo",{Title="Auto Castelo",Default=ativarCastelo,Callback=function(state)ativarCastelo=state config.AutoCastelo=state salvarConfig() if state then entrarCastelo() task.spawn(atacarMobsCastelo) end end})
if config.AutoCastelo then entrarCastelo() task.spawn(atacarMobsCastelo) end

-- 🕒 Schedule
local function dentroIntervaloCastelo() local m=os.date("*t").min return (m>=15 and m<=30) or (m>=45 and m<=57) end
task.spawn(function()
    while true do
        if dentroIntervaloCastelo() and ativarDungeon then
            sairDungeon()
            ativarDungeon=false
            if config.AutoCastelo then entrarCastelo() task.spawn(atacarMobsCastelo) end
        end
        task.wait(10)
    end
end)
